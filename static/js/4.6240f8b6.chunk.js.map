{"version":3,"sources":["components/Order/style.module.css","components/Order/index.jsx","redux/actions/orderActions.js","pages/OrderPage/index.jsx"],"names":["module","exports","Order","props","className","css","Chat_notification","Chat_notification_content","Chat_notification_title","order","dun","Chat_notification_message","hayag","name","street","city","orts","bacon","cheese","meat","salad","loadOrdersStart","type","loadOrdersSuccess","loadedOrders","orders","loadOrdersError","error","connect","state","orderReducer","loading","userId","signupReducer","dispatch","loadOrders","getState","token","axios","get","then","response","Object","entries","data","reverse","catch","err","actions","useEffect","appData","useContext","BurgerContext","Spinner","map","el"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,kBAAoB,iCAAiC,+BAAiC,8CAA8C,uBAAyB,sCAAsC,0BAA4B,yCAAyC,wBAA0B,uCAAuC,0BAA4B,2C,kFCmBrYC,EAjBD,SAACC,GACb,OAEI,qBAAKC,UAAWC,IAAIC,kBAApB,SACD,sBAAKF,UAAWC,IAAIE,0BAApB,UACE,qBAAIH,UAAWC,IAAIG,wBAAnB,gEAAwDL,EAAMM,MAAMC,IAApE,YACA,oBAAGN,UAAWC,IAAIM,0BAAlB,uCAAoDR,EAAMM,MAAMG,MAAMC,KAAtE,MAA+EV,EAAMM,MAAMG,MAAME,OAAjG,MAA4GX,EAAMM,MAAMG,MAAMG,QAC7H,oBAAGX,UAAWC,IAAIM,0BAAlB,2FAAgER,EAAMM,MAAMO,KAAKC,MAAjF,0CACCd,EAAMM,MAAMO,KAAKE,OADlB,8DACwCf,EAAMM,MAAMO,KAAKG,KADzD,oCAEChB,EAAMM,MAAMO,KAAKI,e,eCabC,EAAkB,WAC7B,MAAO,CACLC,KAAM,sBAGGC,EAAoB,SAACC,GAChC,MAAO,CACLF,KAAM,sBACNG,OAAQD,IAGCE,EAAkB,SAACC,GAC9B,MAAO,CACLL,KAAM,oBACNK,U,QCAWC,uBAbS,SAACC,GACvB,MAAO,CACLJ,OAAQI,EAAMC,aAAaL,OAC3BM,QAASF,EAAMC,aAAaC,QAC5BC,OAAQH,EAAMI,cAAcD,WAIL,SAACE,GAC1B,MAAO,CACLC,WAAY,SAACH,GAAD,OAAYE,EDnCF,SAACF,GACzB,OAAO,SAAUE,EAAUE,GAGzBF,EAASb,KAET,IAAMgB,EAAQD,IAAWH,cAAcI,MAEvCC,IACGC,IADH,4BAC4BF,EAD5B,sCAC+DL,EAD/D,MAEGQ,MAAK,SAACC,GACL,IAAMjB,EAAekB,OAAOC,QAAQF,EAASG,MAAMC,UACnDX,EAASX,EAAkBC,OAE5BsB,OAAM,SAACC,GAAD,OAASb,EAASR,EAAgBqB,QCqBVC,CAAmBhB,QAGzCJ,EAhCG,SAACzB,GAEjB8C,qBAAU,WACR9C,EAAMgC,WAAWhC,EAAM6B,UACtB,IAEH,IAAMkB,EAAUC,qBAAWC,KAC3B,OACE,gCACG,GAAKF,EACL/C,EAAM4B,QACL,cAACsB,EAAA,EAAD,IAEAlD,EAAMsB,OAAO6B,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAmB9C,MAAO8C,EAAG,IAAjBA,EAAG","file":"static/js/4.6240f8b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"style_Order__3aFv3\",\"Chat_notification\":\"style_Chat_notification__2RrXZ\",\"Chat_notification_logo_wrapper\":\"style_Chat_notification_logo_wrapper__3yynJ\",\"Chat_notification_logo\":\"style_Chat_notification_logo__ZRf02\",\"Chat_notification_content\":\"style_Chat_notification_content__3bMNt\",\"Chat_notification_title\":\"style_Chat_notification_title__1WCbX\",\"Chat_notification_message\":\"style_Chat_notification_message__3ofgo\"};","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst Order = (props) => {\r\n  return (\r\n      \r\n      <div className={css.Chat_notification}>\r\n     <div className={css.Chat_notification_content}>\r\n       <h4 className={css.Chat_notification_title}>Үнийн дүн: {props.order.dun}₮</h4>\r\n       <p className={css.Chat_notification_message}>Хаяг: {props.order.hayag.name} | {props.order.hayag.street} | {props.order.hayag.city}</p>\r\n        <p className={css.Chat_notification_message}>Орц - Гахайн мах: {props.order.orts.bacon}, Бяслаг:\r\n        {props.order.orts.cheese}, Үхрийн мах: {props.order.orts.meat}, Салад:\r\n        {props.order.orts.salad}</p>\r\n     </div>\r\n    </div>\r\n    \r\n  );\r\n \r\n};\r\n\r\nexport default Order;\r\n","import axios from \"../../axios-orders\";\r\nexport const loadOrders = (userId) => {\r\n  return function (dispatch, getState) {\r\n    // Zahialgiig tataj ehellee gedgiig medegdene..\r\n    // Eniig huleej avaad Spinner ajillaj ehlene.\r\n    dispatch(loadOrdersStart());\r\n\r\n    const token = getState().signupReducer.token;\r\n\r\n    axios\r\n      .get(`orders.json?&auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        const loadedOrders = Object.entries(response.data).reverse();\r\n        dispatch(loadOrdersSuccess(loadedOrders));\r\n      })\r\n      .catch((err) => dispatch(loadOrdersError(err)));\r\n  };\r\n};\r\n\r\nexport const clearOrder = () => {\r\n  return {\r\n    type: \"CLEAR_ORDER\",\r\n  };\r\n};\r\n\r\nexport const loadOrdersStart = () => {\r\n  return {\r\n    type: \"LOAD_ORDERS_START\",\r\n  };\r\n};\r\nexport const loadOrdersSuccess = (loadedOrders) => {\r\n  return {\r\n    type: \"LOAD_ORDERS_SUCCESS\",\r\n    orders: loadedOrders,\r\n  };\r\n};\r\nexport const loadOrdersError = (error) => {\r\n  return {\r\n    type: \"LOAD_ORDERS_ERROR\",\r\n    error,\r\n  };\r\n};\r\n\r\n// Захиалгыг хадгалах\r\nexport const saveOrder = (newOrder) => {\r\n  return function (dispatch, getState) {\r\n    // Spinner ergelduulne\r\n    dispatch(saveOrderStart());\r\n\r\n    const token = getState().signupReducer.token;\r\n\r\n    axios\r\n      .post(`/orders.json?auth=${token}`, newOrder)\r\n      .then((response) => {\r\n        dispatch(saveOrderSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(saveOrderError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const saveOrderStart = (newOrder) => {\r\n  return {\r\n    type: \"SAVE_ORDER_START\",\r\n  };\r\n};\r\nexport const saveOrderSuccess = (newOrder) => {\r\n  return {\r\n    type: \"SAVE_ORDER_SUCCESS\",\r\n  };\r\n};\r\nexport const saveOrderError = (error) => {\r\n  return {\r\n    type: \"SAVE_ORDER_ERROR\",\r\n    errorMessage: error,\r\n  };\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Spinner from \"../../components/General/Spinner\";\r\nimport Order from \"../../components/Order\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/orderActions\";\r\nimport BurgerContext from \"../../context/BurgerContext\";\r\n\r\nconst OrderPage = (props) => {\r\n  \r\n  useEffect(() => {\r\n    props.loadOrders(props.userId);\r\n  }, []);\r\n\r\n  const appData = useContext(BurgerContext);\r\n  return (\r\n    <div>\r\n      {\"\" + appData}\r\n      {props.loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        props.orders.map((el) => <Order key={el[0]} order={el[1]} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.orderReducer.orders,\r\n    loading: state.orderReducer.loading,\r\n    userId: state.signupReducer.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadOrders: (userId) => dispatch(actions.loadOrders(userId)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPage);\r\n"],"sourceRoot":""}